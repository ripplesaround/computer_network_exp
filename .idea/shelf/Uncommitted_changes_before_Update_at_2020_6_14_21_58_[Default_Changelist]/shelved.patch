Index: ch06/实验1/python_new/server.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch06/实验1/python_new/server.py	(date 1592142556150)
+++ ch06/实验1/python_new/server.py	(date 1592142556150)
@@ -0,0 +1,34 @@
+# coding=utf-8
+
+'''
+Author: ripples
+Email: ripplesaround@sina.com
+
+date: 2020/5/21 16:53
+desc: 注意这里实际上是实现了PPT ch06-1 p31 的框图，只是把实验2的连接去掉了，没有组装包checksum之类的
+个人感觉实验里没必要写这些，这并不是这个实验的重点，重点应该在与是否进行了连接。
+还需要进一步讨论
+'''
+
+import socket
+import time
+import numpy as np
+print("  程序开始执行")
+import socket
+#创建socket
+skt = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
+#绑定地址和端口
+skt.bind(('192.168.1.101',50007))
+#循环
+while True:
+    #调用接受消息
+    data,addr = skt.recvfrom(1024)
+    #接受成功回复消息
+    rst = data.decode("utf-8").upper().encode("utf-8")
+    skt.sendto(rst,addr)
+    print('server Done')
+#关闭链接
+skt.close()
+
+print("----------------------------------------")
+print("程序结束")
\ No newline at end of file
Index: ch06/实验1/python_new/client.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ch06/实验1/python_new/client.py	(date 1590067202068)
+++ ch06/实验1/python_new/client.py	(date 1590067202068)
@@ -0,0 +1,53 @@
+# coding=utf-8
+
+'''
+Author: ripples
+Email: ripplesaround@sina.com
+
+date: 2020/5/21 17:04
+desc:
+'''
+
+import socket
+import sys
+import time
+import _thread
+import threading
+client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
+selfport = 0
+
+def connect_build():
+    '''
+    每次发送前都要建立连接
+    :return: 返回要发送到的ip地址和端口地址
+    '''
+    server_ip = input("server_ip >>>")
+    Port = int(input("Port >>>"))
+    #'192.168.1.106'
+    # se = 'start'.encode('utf-8')
+    # client.sendto(se, (server_ip, Port))
+    # re = client.recvfrom(1024)
+    # print(f"来自{re[1]}的消息:{re[0].decode('utf-8')}，连接已建立")
+    # selfport = int(re[0].decode('utf-8'))
+    return server_ip,Port
+
+def rec_from_server(n):
+    local_re = ""
+    local_re = client.recvfrom(1024)
+    print(f"来自{local_re[1]}的消息:{local_re[0].decode('utf-8')}")
+
+
+while 1:
+    server_ip, Port = connect_build()
+    mess = input(">>>")
+    client.sendto(mess.encode("utf-8"), (server_ip, Port))
+    t1 = threading.Thread(target=rec_from_server, args=(1,))
+    t1.setDaemon(True)
+    t1.start()
+    time.sleep(0.5)
+    if mess == "stop":
+        break
+    print("----------------------------------------")
+
+print("----------------------------------------")
+print("结束发送")
